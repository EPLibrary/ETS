Reading GTFS Data
-----------------

Types of queries I'll need to do for LRT:

1. Get a list of stations

SELECT * FROM vsd.ETS_stops WHERE stop_id IN (
	SELECT s.stop_id
	FROM vsd.ETS_stop_times stime
	JOIN vsd.ETS_trips t ON t.trip_id=stime.trip_id
	JOIN vsd.ETS_calendar_dates c ON c.service_id=t.service_id

	JOIN vsd.ETS_stops s ON stime.stop_id=s.stop_id
	-- This final join seems to add considerable time to the query...
	JOIN vsd.ETS_routes r ON r.route_id=t.route_id
	WHERE r.route_type=0
	GROUP BY s.stop_id
)
ORDER BY stop_lat , stop_lon


--(This is horrendously inefficient... but it works.)
--Notes:

Each station shows twice (once for each track), except for endpoints.
	- Century Park Station
	- Clareview Station
	- NAIT Station

4982	Century Park Station
2113	Southgate Station
2114	Southgate Station
2115	South Campus Ft Edmonton Station
2116	South Campus Ft Edmonton Station
9981	McKernan Belgravia Station
9982	McKernan Belgravia Station
2005	Metro Line JTTl Track
2019	Health Sciences Jubilee Station
2014	Health Sciences Jubilee Station
2969	University Station
2316	University Station
1925	Grandin Station
1754	Grandin Station
1985	Bay Enterprise Square  Station
1774	Bay Enterprise Square Station
1926	Corona Station
1891	Corona Station
1863	Central Station
1935	Central Station
1691	Churchill Station (Southbound)
1876	Churchill Station (Nouthbound)
1118	MacEwan Station
1117	MacEwan Station
1114	Kingsway RAH Station
1115	Kingsway RAH Station
1723	Stadium Station
1981	Stadium Station
1116	NAIT Station
1889	Coliseum Station
1742	Coliseum Station
7692	Belvedere Station
7830	Belvedere Station
9944	DL MacDonald Platform
9945	DL MacDonald Platform
7977	Clareview Station

/* Notes:
Okay, so there's no way to tell which direction each stop goes, really, afaik.
There are sometimes multiple stops for a station. Not always.

--Each stop has an id, name, and lat/lon
--Figuring out which stops are for trains is a pain in the ass. Why couldn't they just have a type field on here??
I suppose I can add one...

*/



2. Figure out the stop times for a given stop_id
-- This query adds a correct datetime for each departure
SELECT
CASE WHEN LEFT(departure_time,2) > 23 THEN
CAST(DATEADD(d, 1, date) AS datetime)+CAST(CAST(LEFT(departure_time,2)%24 AS varchar)+':'+RIGHT(departure_time,5) AS DateTime)
ELSE
CAST(date AS datetime)+CAST(departure_time AS DateTime)
END --CASE
AS ActualDateTime
,* FROM vsd.ETS_routes r
JOIN vsd.ETS_trips t ON r.route_id=t.route_id
JOIN vsd.ETS_calendar_dates c ON c.service_id=t.service_id
JOIN vsd.ETS_stop_times stime ON t.trip_id=stime.trip_id
JOIN vsd.ETS_stops s ON stime.stop_id=s.stop_id
WHERE r.route_type=0
AND c.date='2017-08-03'
AND stime.stop_id=1691 --'Churchill Station' Southbound
--AND stop_headsign='Clareview'
AND departure_time > '23:00:00'
ORDER BY c.date, stime.departure_time


3. Given from and to stations, figure out the route that applies (and the trips?)

-- I think this will actually work!
SELECT
CASE WHEN LEFT(departure_time,2) > 23 THEN
CAST(DATEADD(d, 1, date) AS datetime)+CAST(CAST(LEFT(departure_time,2)%24 AS varchar)+':'+RIGHT(departure_time,5) AS DateTime)
ELSE
CAST(date AS datetime)+CAST(departure_time AS DateTime)
END --CASE
AS ActualDateTime
,* FROM vsd.ETS_stop_times stime
JOIN vsd.ETS_trips t ON stime.trip_id=t.trip_id
JOIN vsd.ETS_calendar_dates c ON c.service_id=t.service_id
WHERE
(stop_id=1691 --Churchill South
OR stop_id=1876) --Churchill North
AND stime.trip_id IN
(SELECT DISTINCT trip_id from vsd.ETS_stop_times stime2
WHERE --TO stop_id
stime2.stop_id=7977 --TO clareview (note that here we don't care about pickup_type)
)
AND stop_sequence <
--stop sequence number for destination station from same trip
(SELECT TOP 1 stop_sequence FROM vsd.ETS_stop_times stime3 WHERE stop_id=7977 AND trip_id=stime.trip_id ORDER BY stop_sequence)
--The above should probably become a view if I can confirm that it works
AND date = '2017-08-08'
ORDER BY arrival_time




OLD VIEW with varchar times
CPU time = 52344 ms,  elapsed time = 38354 ms.

New view with int hours and int minutes
CPU time = 47861 ms,  elapsed time = 35347 ms.


To do:
Fix the bus stop view so that you can change the time
-Allow loading page with bus stop



Next step:
-Show list of routes
-Once a route is selected, dropdowns for "from" and "to" repopulate with the relevant stops for the route


--This query gets all the stops for a particular route. ~16ms
SELECT DISTINCT stime.stop_id, stop_code, stop_name, stop_lat, stop_lon, location_type FROM vsd.ETS_stop_times stime
JOIN vsd.ETS_stops s ON s.stop_id=stime.stop_id
WHERE trip_id IN (SELECT trip_id FROM vsd.ETS_trips WHERE route_id='501')